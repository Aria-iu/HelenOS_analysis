Archive member included to satisfy reference by file (symbol)

uspace/lib/c/libstartfiles.a.p/arch_amd64_src_crt0.S.o
                              (--whole-archive)
uspace/lib/c/libstartfiles.a.p/generic_crt_crt1.c.o
                              (--whole-archive)
uspace/lib/libblock.a.p/block_block.c.o
                              uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o (block_init)
uspace/lib/libdevice.a.p/device_src_bd.c.o
                              uspace/lib/libblock.a.p/block_block.c.o (bd_open)
uspace/lib/libfs.a.p/fs_libfs.c.o
                              uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o (fs_register)

As-needed library included to satisfy reference by file (symbol)

libc.so.0                     uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o (task_retval)

Discarded input sections

 .text          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 .data          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 .bss           0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 .text          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .data          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .bss           0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .text          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
 .data          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
 .bss           0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
 .text          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
 .data          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
 .bss           0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
 .text          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
 .data          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
 .bss           0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
 .text          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 .data          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 .bss           0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 .text.mfs_count_free_inodes
                0x0000000000000000       0x12 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 .text          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_utils.c.o
 .data          0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_utils.c.o
 .bss           0x0000000000000000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_utils.c.o
 .text.conv64   0x0000000000000000       0x13 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_utils.c.o
 .data          0x0000000000000000        0x0 uspace/lib/c/libstartfiles.a.p/arch_amd64_src_crt0.S.o
 .bss           0x0000000000000000        0x0 uspace/lib/c/libstartfiles.a.p/arch_amd64_src_crt0.S.o
 .text          0x0000000000000000        0x0 uspace/lib/c/libstartfiles.a.p/generic_crt_crt1.c.o
 .data          0x0000000000000000        0x0 uspace/lib/c/libstartfiles.a.p/generic_crt_crt1.c.o
 .bss           0x0000000000000000        0x0 uspace/lib/c/libstartfiles.a.p/generic_crt_crt1.c.o
 .text          0x0000000000000000        0x0 uspace/lib/libblock.a.p/block_block.c.o
 .data          0x0000000000000000        0x0 uspace/lib/libblock.a.p/block_block.c.o
 .bss           0x0000000000000000        0x0 uspace/lib/libblock.a.p/block_block.c.o
 .text.read_blocks.part.0
                0x0000000000000000       0x18 uspace/lib/libblock.a.p/block_block.c.o
 .text.write_blocks.part.0
                0x0000000000000000       0x18 uspace/lib/libblock.a.p/block_block.c.o
 .text.block_bb_read
                0x0000000000000000      0x120 uspace/lib/libblock.a.p/block_block.c.o
 .text.block_bb_get
                0x0000000000000000       0x7e uspace/lib/libblock.a.p/block_block.c.o
 .text.block_seqread
                0x0000000000000000      0x1be uspace/lib/libblock.a.p/block_block.c.o
 .text.block_write_direct
                0x0000000000000000       0xda uspace/lib/libblock.a.p/block_block.c.o
 .text.block_sync_cache
                0x0000000000000000       0x86 uspace/lib/libblock.a.p/block_block.c.o
 .text.block_get_nblocks
                0x0000000000000000       0x86 uspace/lib/libblock.a.p/block_block.c.o
 .text.block_read_bytes_direct
                0x0000000000000000      0x1e8 uspace/lib/libblock.a.p/block_block.c.o
 .text.block_read_toc
                0x0000000000000000       0x9e uspace/lib/libblock.a.p/block_block.c.o
 .text          0x0000000000000000        0x0 uspace/lib/libdevice.a.p/device_src_bd.c.o
 .data          0x0000000000000000        0x0 uspace/lib/libdevice.a.p/device_src_bd.c.o
 .bss           0x0000000000000000        0x0 uspace/lib/libdevice.a.p/device_src_bd.c.o
 .text.bd_read_toc
                0x0000000000000000       0x9a uspace/lib/libdevice.a.p/device_src_bd.c.o
 .text          0x0000000000000000        0x0 uspace/lib/libfs.a.p/fs_libfs.c.o
 .data          0x0000000000000000        0x0 uspace/lib/libfs.a.p/fs_libfs.c.o
 .bss           0x0000000000000000        0x0 uspace/lib/libfs.a.p/fs_libfs.c.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
LOAD uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
LOAD uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
LOAD uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
LOAD uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
LOAD uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
LOAD uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_utils.c.o
START GROUP
LOAD uspace/lib/c/libstartfiles.a
LOAD uspace/lib/libblock.a
LOAD uspace/lib/libdevice.a
LOAD uspace/lib/libc.so.0.0
LOAD uspace/lib/libfs.a
LOAD /home/zyc/.local/share/HelenOS/cross/lib/gcc/amd64-helenos/13.2.0/libgcc.a
END GROUP
                0x0000000000400000                PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x400000))
                0x0000000000400120                . = (SEGMENT_START ("text-segment", 0x400000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash           0x0000000000400120      0x190
 *(.hash)
 .hash          0x0000000000400120      0x190 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.gnu.hash
 *(.gnu.hash)

.dynsym         0x00000000004002b0      0x5b8
 *(.dynsym)
 .dynsym        0x00000000004002b0      0x5b8 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.dynstr         0x0000000000400868      0x3b0
 *(.dynstr)
 .dynstr        0x0000000000400868      0x3b0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.gnu.version    0x0000000000400c18        0x0
 *(.gnu.version)
 .gnu.version   0x0000000000400c18        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.gnu.version_d  0x0000000000400c18        0x0
 *(.gnu.version_d)
 .gnu.version_d
                0x0000000000400c18        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.gnu.version_r  0x0000000000400c18        0x0
 *(.gnu.version_r)
 .gnu.version_r
                0x0000000000400c18        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.rela.dyn       0x0000000000400c18       0x30
 *(.rela.init)
 *(.rela.text .rela.text.* .rela.gnu.linkonce.t.*)
 .rela.text.mfs_read_sb.constprop.0
                0x0000000000400c18        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 .rela.text.__c_start
                0x0000000000400c18        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 *(.rela.fini)
 *(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*)
 .rela.rodata.cst8
                0x0000000000400c18        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 *(.rela.data .rela.data.* .rela.gnu.linkonce.d.*)
 .rela.data.rel.ro
                0x0000000000400c18        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 *(.rela.tdata .rela.tdata.* .rela.gnu.linkonce.td.*)
 *(.rela.tbss .rela.tbss.* .rela.gnu.linkonce.tb.*)
 *(.rela.ctors)
 *(.rela.dtors)
 *(.rela.got)
 .rela.got      0x0000000000400c18        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 *(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*)
 .rela.bss      0x0000000000400c18       0x30 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 *(.rela.ldata .rela.ldata.* .rela.gnu.linkonce.l.*)
 *(.rela.lbss .rela.lbss.* .rela.gnu.linkonce.lb.*)
 *(.rela.lrodata .rela.lrodata.* .rela.gnu.linkonce.lr.*)
 *(.rela.ifunc)

.rela.plt       0x0000000000400c48      0x570
 *(.rela.plt)
 .rela.plt      0x0000000000400c48      0x570 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                [!provide]                        PROVIDE (__rela_iplt_start = .)
 *(.rela.iplt)
 .rela.iplt     0x00000000004011b8        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                [!provide]                        PROVIDE (__rela_iplt_end = .)

.relr.dyn
 *(.relr.dyn)

.init
 *(SORT_NONE(.init))

.plt            0x00000000004011c0      0x3b0
 *(.plt)
 .plt           0x00000000004011c0      0x3b0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                0x00000000004011d0                task_retval
                0x00000000004011e0                loc_service_connect
                0x00000000004011f0                printf
                0x0000000000401200                async_hangup
                0x0000000000401210                async_req_0_2
                0x0000000000401220                async_wait_for
                0x0000000000401230                hash_table_create
                0x0000000000401240                async_data_write_start
                0x0000000000401250                hash_table_insert
                0x0000000000401260                __errno
                0x0000000000401270                async_get_call
                0x0000000000401280                service_connect_blocking
                0x0000000000401290                async_data_read_finalize
                0x00000000004012a0                memcpy
                0x00000000004012b0                puts
                0x00000000004012c0                malloc
                0x00000000004012d0                async_answer_0
                0x00000000004012e0                async_share_in_start_0_0
                0x00000000004012f0                stacktrace_print
                0x0000000000401300                strtol
                0x0000000000401310                async_exchange_end
                0x0000000000401320                fibril_mutex_trylock
                0x0000000000401330                calloc
                0x0000000000401340                async_send_3
                0x0000000000401350                fibril_mutex_unlock
                0x0000000000401360                async_answer_4
                0x0000000000401370                async_req_0_1
                0x0000000000401380                async_answer_5
                0x0000000000401390                memcmp
                0x00000000004013a0                async_create_callback_port
                0x00000000004013b0                str_cmp
                0x00000000004013c0                hash_table_remove_item
                0x00000000004013d0                __helenos_assert_abort
                0x00000000004013e0                memset
                0x00000000004013f0                async_data_read_receive
                0x0000000000401400                async_accept_0
                0x0000000000401410                async_data_read_start
                0x0000000000401420                str_cpy
                0x0000000000401430                str_error_name
                0x0000000000401440                str_size
                0x0000000000401450                async_answer_1
                0x0000000000401460                async_exchange_begin
                0x0000000000401470                async_send_0
                0x0000000000401480                str_error
                0x0000000000401490                fwrite
                0x00000000004014a0                async_answer_3
                0x00000000004014b0                hash_table_find
                0x00000000004014c0                async_data_write_finalize
                0x00000000004014d0                async_data_write_accept
                0x00000000004014e0                fibril_rwlock_initialize
                0x00000000004014f0                __libc_main
                0x0000000000401500                async_manager
                0x0000000000401510                async_forget
                0x0000000000401520                async_req_3_0
                0x0000000000401530                hash_table_destroy
                0x0000000000401540                async_data_write_receive
                0x0000000000401550                free
                0x0000000000401560                fibril_mutex_lock
 *(.iplt)
 .iplt          0x0000000000401570        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.plt.got        0x0000000000401570        0x0
 *(.plt.got)
 .plt.got       0x0000000000401570        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.plt.sec
 *(.plt.sec)

.text           0x0000000000401570     0x5fc4
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 .text.startup.main
                0x0000000000401570      0x120 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                0x0000000000401570                main
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text.open_nodes_key_hash
                0x0000000000401690       0x21 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x00000000004016b1        0xf 
 .text.open_nodes_hash
                0x00000000004016c0       0x29 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x00000000004016e9        0x7 
 .text.open_nodes_key_equal
                0x00000000004016f0       0x27 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401717        0x9 
 .text.mfs_service_get
                0x0000000000401720        0x8 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401728        0x8 
 .text.mfs_size_get
                0x0000000000401730       0x10 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .text.mfs_node_open
                0x0000000000401740        0x8 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401748        0x8 
 .text.mfs_index_get
                0x0000000000401750        0xf uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x000000000040175f        0x1 
 .text.mfs_lnkcnt_get
                0x0000000000401760       0x2a uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x000000000040178a        0x6 
 .text.mfs_is_directory
                0x0000000000401790       0x1a uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x00000000004017aa        0x6 
 .text.mfs_is_file
                0x00000000004017b0       0x1a uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x00000000004017ca        0x6 
 .text.mfs_close
                0x00000000004017d0        0x8 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x00000000004017d8        0x8 
 .text.mfs_free_block_count
                0x00000000004017e0       0x6c uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x000000000040184c        0x4 
 .text.mfs_total_block_count
                0x0000000000401850       0x47 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401897        0x9 
 .text.mfs_size_block
                0x00000000004018a0       0x3f uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x00000000004018df        0x1 
 .text.mfs_has_children
                0x00000000004018e0       0x9f uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x000000000040197f        0x1 
 .text.mfs_link
                0x0000000000401980       0xfe uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401a7e        0x2 
 .text.mfs_create_node
                0x0000000000401a80      0x19c uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401c1c        0x4 
 .text.mfs_node_core_get
                0x0000000000401c20      0x14c uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401d6c        0x4 
 .text.mfs_node_get
                0x0000000000401d70       0x49 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401db9        0x7 
 .text.mfs_match
                0x0000000000401dc0       0xf5 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401eb5        0xb 
 .text.mfs_unmounted
                0x0000000000401ec0       0x7a uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401f3a        0x6 
 .text.mfs_node_put
                0x0000000000401f40       0xb3 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000401ff3        0xd 
 .text.mfs_root_get
                0x0000000000402000       0x3e uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x000000000040203e        0x2 
 .text.mfs_sync
                0x0000000000402040       0x5b uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x000000000040209b        0x5 
 .text.mfs_truncate
                0x00000000004020a0       0x7c uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x000000000040211c        0x4 
 .text.mfs_write
                0x0000000000402120      0x301 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000402421        0xf 
 .text.mfs_destroy_node
                0x0000000000402430       0xec uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x000000000040251c        0x4 
 .text.mfs_read
                0x0000000000402520      0x34f uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x000000000040286f        0x1 
 .text.mfs_unlink
                0x0000000000402870      0x140 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .text.mfs_read_sb.constprop.0
                0x00000000004029b0      0x45a uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000402e0a        0x6 
 .text.mfs_fsprobe
                0x0000000000402e10       0x3e uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000402e4e        0x2 
 .text.mfs_destroy
                0x0000000000402e50      0x144 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000402f94        0xc 
 .text.mfs_mounted
                0x0000000000402fa0      0x198 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x0000000000403138        0x8 
 .text.mfs_global_init
                0x0000000000403140       0x21 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
                0x0000000000403140                mfs_global_init
 *fill*         0x0000000000403161        0xf 
 .text.mfs_get_inode
                0x0000000000403170      0x2bf uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
                0x0000000000403170                mfs_get_inode
 *fill*         0x000000000040342f        0x1 
 .text.mfs_put_inode
                0x0000000000403430      0x22e uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
                0x0000000000403430                mfs_put_inode
 *fill*         0x000000000040365e        0x2 
 .text.mfs_inode_shrink
                0x0000000000403660      0x111 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
                0x0000000000403660                mfs_inode_shrink
 *fill*         0x0000000000403771        0xf 
 .text.write_ind_zone.isra.0
                0x0000000000403780       0xd4 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
 *fill*         0x0000000000403854        0xc 
 .text.read_ind_zone.isra.0
                0x0000000000403860      0x125 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
 *fill*         0x0000000000403985        0xb 
 .text.rw_map_ondisk.isra.0
                0x0000000000403990      0x45e uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
 *fill*         0x0000000000403dee        0x2 
 .text.mfs_read_map
                0x0000000000403df0       0x5b uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
                0x0000000000403df0                mfs_read_map
 *fill*         0x0000000000403e4b        0x5 
 .text.mfs_write_map
                0x0000000000403e50       0x47 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
                0x0000000000403e50                mfs_write_map
 *fill*         0x0000000000403e97        0x9 
 .text.mfs_prune_ind_zones
                0x0000000000403ea0      0x181 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
                0x0000000000403ea0                mfs_prune_ind_zones
 *fill*         0x0000000000404021        0xf 
 .text.mfs_read_dentry
                0x0000000000404030      0x19e uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
                0x0000000000404030                mfs_read_dentry
 *fill*         0x00000000004041ce        0x2 
 .text.mfs_write_dentry
                0x00000000004041d0       0xf9 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
                0x00000000004041d0                mfs_write_dentry
 *fill*         0x00000000004042c9        0x7 
 .text.mfs_remove_dentry
                0x00000000004042d0      0x2aa uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
                0x00000000004042d0                mfs_remove_dentry
 *fill*         0x000000000040457a        0x6 
 .text.mfs_insert_dentry
                0x0000000000404580      0x338 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
                0x0000000000404580                mfs_insert_dentry
 *fill*         0x00000000004048b8        0x8 
 .text.mfs_alloc_bit
                0x00000000004048c0      0x22d uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 *fill*         0x0000000000404aed        0x3 
 .text.mfs_count_free_bits
                0x0000000000404af0      0x170 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 .text.mfs_alloc_inode
                0x0000000000404c60        0xf uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
                0x0000000000404c60                mfs_alloc_inode
 *fill*         0x0000000000404c6f        0x1 
 .text.mfs_free_inode
                0x0000000000404c70       0xe2 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
                0x0000000000404c70                mfs_free_inode
 *fill*         0x0000000000404d52        0xe 
 .text.mfs_alloc_zone
                0x0000000000404d60       0x3e uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
                0x0000000000404d60                mfs_alloc_zone
 *fill*         0x0000000000404d9e        0x2 
 .text.mfs_free_zone
                0x0000000000404da0      0x11c uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
                0x0000000000404da0                mfs_free_zone
 *fill*         0x0000000000404ebc        0x4 
 .text.mfs_count_free_zones
                0x0000000000404ec0        0xf uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
                0x0000000000404ec0                mfs_count_free_zones
 *fill*         0x0000000000404ecf        0x1 
 .text.conv16   0x0000000000404ed0       0x12 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_utils.c.o
                0x0000000000404ed0                conv16
 *fill*         0x0000000000404ee2        0xe 
 .text.conv32   0x0000000000404ef0       0x10 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_utils.c.o
                0x0000000000404ef0                conv32
 .text          0x0000000000404f00        0xc uspace/lib/c/libstartfiles.a.p/arch_amd64_src_crt0.S.o
                0x0000000000404f00                _start
 *fill*         0x0000000000404f0c        0x4 
 .text.__c_start
                0x0000000000404f10       0x8c uspace/lib/c/libstartfiles.a.p/generic_crt_crt1.c.o
                0x0000000000404f10                __c_start
 *fill*         0x0000000000404f9c        0x4 
 .text.cache_key_hash
                0x0000000000404fa0        0x9 uspace/lib/libblock.a.p/block_block.c.o
 *fill*         0x0000000000404fa9        0x7 
 .text.cache_hash
                0x0000000000404fb0        0xa uspace/lib/libblock.a.p/block_block.c.o
 *fill*         0x0000000000404fba        0x6 
 .text.cache_key_equal
                0x0000000000404fc0       0x10 uspace/lib/libblock.a.p/block_block.c.o
 .text.block_init
                0x0000000000404fd0      0x180 uspace/lib/libblock.a.p/block_block.c.o
                0x0000000000404fd0                block_init
 .text.block_cache_init
                0x0000000000405150      0x16c uspace/lib/libblock.a.p/block_block.c.o
                0x0000000000405150                block_cache_init
 *fill*         0x00000000004052bc        0x4 
 .text.block_cache_fini
                0x00000000004052c0      0x18d uspace/lib/libblock.a.p/block_block.c.o
                0x00000000004052c0                block_cache_fini
 *fill*         0x000000000040544d        0x3 
 .text.block_fini
                0x0000000000405450       0xee uspace/lib/libblock.a.p/block_block.c.o
                0x0000000000405450                block_fini
 *fill*         0x000000000040553e        0x2 
 .text.block_put
                0x0000000000405540      0x2f0 uspace/lib/libblock.a.p/block_block.c.o
                0x0000000000405540                block_put
 .text.block_get
                0x0000000000405830      0x528 uspace/lib/libblock.a.p/block_block.c.o
                0x0000000000405830                block_get
 *fill*         0x0000000000405d58        0x8 
 .text.block_read_direct
                0x0000000000405d60       0xda uspace/lib/libblock.a.p/block_block.c.o
                0x0000000000405d60                block_read_direct
 *fill*         0x0000000000405e3a        0x6 
 .text.block_get_bsize
                0x0000000000405e40       0x86 uspace/lib/libblock.a.p/block_block.c.o
                0x0000000000405e40                block_get_bsize
 *fill*         0x0000000000405ec6        0xa 
 .text.bd_cb_conn
                0x0000000000405ed0       0x3b uspace/lib/libdevice.a.p/device_src_bd.c.o
 *fill*         0x0000000000405f0b        0x5 
 .text.bd_open  0x0000000000405f10       0xa8 uspace/lib/libdevice.a.p/device_src_bd.c.o
                0x0000000000405f10                bd_open
 *fill*         0x0000000000405fb8        0x8 
 .text.bd_close
                0x0000000000405fc0        0xa uspace/lib/libdevice.a.p/device_src_bd.c.o
                0x0000000000405fc0                bd_close
 *fill*         0x0000000000405fca        0x6 
 .text.bd_read_blocks
                0x0000000000405fd0       0x9a uspace/lib/libdevice.a.p/device_src_bd.c.o
                0x0000000000405fd0                bd_read_blocks
 *fill*         0x000000000040606a        0x6 
 .text.bd_write_blocks
                0x0000000000406070       0x9a uspace/lib/libdevice.a.p/device_src_bd.c.o
                0x0000000000406070                bd_write_blocks
 *fill*         0x000000000040610a        0x6 
 .text.bd_sync_cache
                0x0000000000406110       0x4e uspace/lib/libdevice.a.p/device_src_bd.c.o
                0x0000000000406110                bd_sync_cache
 *fill*         0x000000000040615e        0x2 
 .text.bd_get_block_size
                0x0000000000406160       0x4f uspace/lib/libdevice.a.p/device_src_bd.c.o
                0x0000000000406160                bd_get_block_size
 *fill*         0x00000000004061af        0x1 
 .text.bd_get_num_blocks
                0x00000000004061b0       0x5d uspace/lib/libdevice.a.p/device_src_bd.c.o
                0x00000000004061b0                bd_get_num_blocks
 *fill*         0x000000000040620d        0x3 
 .text.vfs_connection
                0x0000000000406210      0xf72 uspace/lib/libfs.a.p/fs_libfs.c.o
 *fill*         0x0000000000407182        0xe 
 .text.fs_register
                0x0000000000407190      0x167 uspace/lib/libfs.a.p/fs_libfs.c.o
                0x0000000000407190                fs_register
 *fill*         0x00000000004072f7        0x9 
 .text.fs_node_initialize
                0x0000000000407300        0xd uspace/lib/libfs.a.p/fs_libfs.c.o
                0x0000000000407300                fs_node_initialize
 *fill*         0x000000000040730d        0x3 
 .text.fs_instance_create
                0x0000000000407310      0x10d uspace/lib/libfs.a.p/fs_libfs.c.o
                0x0000000000407310                fs_instance_create
 *fill*         0x000000000040741d        0x3 
 .text.fs_instance_get
                0x0000000000407420       0x74 uspace/lib/libfs.a.p/fs_libfs.c.o
                0x0000000000407420                fs_instance_get
 *fill*         0x0000000000407494        0xc 
 .text.fs_instance_destroy
                0x00000000004074a0       0x94 uspace/lib/libfs.a.p/fs_libfs.c.o
                0x00000000004074a0                fs_instance_destroy
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x0000000000407540      0x5a0
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.main.str1.8
                0x0000000000407540      0x366 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                                         0xa1 (size before relaxing)
 .rodata.main.str1.1
                0x00000000004078a6      0x142 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                                         0x42 (size before relaxing)
 .rodata.mfs_link.str1.1
                0x00000000004079e8        0x5 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .rodata.mfs_node_put.str1.8
                0x00000000004079e8       0x54 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .rodata.mfs_node_put.str1.1
                0x00000000004079e8       0x12 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .rodata.mfs_destroy_node.str1.1
                0x00000000004079e8        0xe uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .rodata.mfs_unlink.str1.1
                0x00000000004079e8       0x15 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .rodata.mfs_read_sb.constprop.0.str1.8
                0x00000000004079e8       0x29 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .rodata.mfs_mounted.str1.1
                0x00000000004079e8        0x8 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x00000000004079e8       0x18 
 .rodata.open_nodes_ops
                0x0000000000407a00       0x28 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .rodata.mfs_inode_shrink.str1.8
                0x0000000000407a28       0x2c uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
 .rodata.mfs_inode_shrink.str1.1
                0x0000000000407a28       0x18 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
 .rodata.mfs_prune_ind_zones.str1.8
                0x0000000000407a28       0x29 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
 .rodata.mfs_prune_ind_zones.str1.1
                0x0000000000407a28       0x1a uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
 .rodata.mfs_count_free_bits.str1.8
                0x0000000000407a28       0x2d uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 .rodata.mfs_count_free_bits.str1.1
                0x0000000000407a28        0xb uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 .rodata.mfs_free_inode.str1.8
                0x0000000000407a28       0x36 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 .rodata.cst8   0x0000000000407a28        0x8 uspace/lib/c/libstartfiles.a.p/generic_crt_crt1.c.o
 .rodata.read_blocks.part.0.str1.8
                0x0000000000407a30       0x27 uspace/lib/libblock.a.p/block_block.c.o
 .rodata.read_blocks.part.0.str1.1
                0x0000000000407a30        0x7 uspace/lib/libblock.a.p/block_block.c.o
 .rodata.block_bb_read.str1.8
                0x0000000000407a30       0x4a uspace/lib/libblock.a.p/block_block.c.o
 .rodata.block_cache_fini.str1.8
                0x0000000000407a30       0x48 uspace/lib/libblock.a.p/block_block.c.o
 .rodata.block_put.str1.1
                0x0000000000407a30       0x21 uspace/lib/libblock.a.p/block_block.c.o
 .rodata.block_put.str1.8
                0x0000000000407a30       0x53 uspace/lib/libblock.a.p/block_block.c.o
 .rodata.block_get.str1.1
                0x0000000000407a30       0x1f uspace/lib/libblock.a.p/block_block.c.o
 *fill*         0x0000000000407a30       0x10 
 .rodata.cache_ops
                0x0000000000407a40       0x28 uspace/lib/libblock.a.p/block_block.c.o
 .rodata.vfs_connection.str1.8
                0x0000000000407a68       0x4e uspace/lib/libfs.a.p/fs_libfs.c.o
 .rodata.vfs_connection.str1.1
                0x0000000000407a68       0x48 uspace/lib/libfs.a.p/fs_libfs.c.o
 .rodata.vfs_connection
                0x0000000000407a68       0x78 uspace/lib/libfs.a.p/fs_libfs.c.o

.rodata1
 *(.rodata1)

.eh_frame_hdr   0x0000000000407ae0      0x2ac
 *(.eh_frame_hdr)
 .eh_frame_hdr  0x0000000000407ae0      0x2ac uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                0x0000000000407ae0                __GNU_EH_FRAME_HDR
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000407d90      0xe4c
 *(.eh_frame)
 .eh_frame      0x0000000000407d90       0x40 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 .eh_frame      0x0000000000407dd0       0x28 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                                         0x40 (size before relaxing)
 .eh_frame      0x0000000000407df8        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 .eh_frame      0x0000000000407df8      0x570 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
                                        0x588 (size before relaxing)
 .eh_frame      0x0000000000408368       0xa8 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
                                         0xc0 (size before relaxing)
 .eh_frame      0x0000000000408410      0x110 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
                                        0x128 (size before relaxing)
 .eh_frame      0x0000000000408520       0xd0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
                                         0xe8 (size before relaxing)
 .eh_frame      0x00000000004085f0      0x138 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
                                        0x170 (size before relaxing)
 .eh_frame      0x0000000000408728       0x40 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_utils.c.o
                                         0x78 (size before relaxing)
 .eh_frame      0x0000000000408768       0x20 uspace/lib/c/libstartfiles.a.p/generic_crt_crt1.c.o
                                         0x38 (size before relaxing)
 .eh_frame      0x0000000000408788      0x1e8 uspace/lib/libblock.a.p/block_block.c.o
                                        0x3c0 (size before relaxing)
 .eh_frame      0x0000000000408970      0x150 uspace/lib/libdevice.a.p/device_src_bd.c.o
                                        0x198 (size before relaxing)
 .eh_frame      0x0000000000408ac0      0x11c uspace/lib/libfs.a.p/fs_libfs.c.o
                                        0x138 (size before relaxing)
 *(.eh_frame.*)

.sframe         0x0000000000408bdc        0x0
 *(.sframe)
 .sframe        0x0000000000408bdc        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 *(.sframe.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x0000000000409000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.sframe
 *(.sframe)
 *(.sframe.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x0000000000409000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000409000        0x0
                0x0000000000409000                PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                0x0000000000409000                PROVIDE (__preinit_array_end = .)

.init_array     0x0000000000409000        0x0
                0x0000000000409000                PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                0x0000000000409000                PROVIDE (__init_array_end = .)

.fini_array     0x0000000000409000        0x0
                0x0000000000409000                PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                0x0000000000409000                PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro    0x0000000000409000        0x0
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)
 .data.rel.ro   0x0000000000409000        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.dynamic        0x0000000000409000      0x150
 *(.dynamic)
 .dynamic       0x0000000000409000      0x150 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                0x0000000000409000                _DYNAMIC

.got            0x0000000000409150        0x0
 *(.got)
 .got           0x0000000000409150        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
 *(.igot)
                0x0000000000409150                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0x18)?0x18:0x0)

.got.plt        0x0000000000409150      0x1e8
 *(.got.plt)
 .got.plt       0x0000000000409150      0x1e8 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                0x0000000000409150                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x0000000000409338        0x0 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o

.data           0x0000000000409340      0x1c0
 *(.data .data.* .gnu.linkonce.d.*)
 .data.mfs_vfs_info
                0x0000000000409340       0x20 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                0x0000000000409340                mfs_vfs_info
 .data.mfs_ops  0x0000000000409360       0x48 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
                0x0000000000409360                mfs_ops
 *fill*         0x00000000004093a8       0x18 
 .data.mfs_libfs_ops
                0x00000000004093c0       0x98 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
                0x00000000004093c0                mfs_libfs_ops
 *fill*         0x0000000000409458        0x8 
 .data.open_nodes_lock
                0x0000000000409460       0x20 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .data.dcl      0x0000000000409480       0x10 uspace/lib/libblock.a.p/block_block.c.o
 *fill*         0x0000000000409490       0x10 
 .data.dcl_lock
                0x00000000004094a0       0x20 uspace/lib/libblock.a.p/block_block.c.o
 .data.instances_list
                0x00000000004094c0       0x10 uspace/lib/libfs.a.p/fs_libfs.c.o
 *fill*         0x00000000004094d0       0x10 
 .data.instances_mutex
                0x00000000004094e0       0x20 uspace/lib/libfs.a.p/fs_libfs.c.o

.data1
 *(.data1)
                0x0000000000409500                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x0000000000409500                . = .
                0x0000000000409500                __bss_start = .

.bss            0x0000000000409500      0x100
 *(.dynbss)
 .dynbss        0x0000000000409500       0x68 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                0x0000000000409500                __progsymbols
                0x0000000000409560                stderr
 *(.bss .bss.* .gnu.linkonce.b.*)
 *fill*         0x0000000000409568       0x18 
 .bss.open_nodes
                0x0000000000409580       0x38 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 *fill*         0x00000000004095b8        0x8 
 .bss.fs_name   0x00000000004095c0       0x15 uspace/lib/libfs.a.p/fs_libfs.c.o
 *fill*         0x00000000004095d5        0x3 
 .bss.libfs_ops
                0x00000000004095d8        0x8 uspace/lib/libfs.a.p/fs_libfs.c.o
 .bss.vfs_out_ops
                0x00000000004095e0        0x8 uspace/lib/libfs.a.p/fs_libfs.c.o
 *fill*         0x00000000004095e8        0x8 
 .bss.reg       0x00000000004095f0       0x10 uspace/lib/libfs.a.p/fs_libfs.c.o
 *(COMMON)
                0x0000000000409600                . = ALIGN ((. != 0x0)?0x8:0x1)

.lbss
 *(.dynlbss)
 *(.lbss .lbss.* .gnu.linkonce.lb.*)
 *(LARGE_COMMON)
                0x0000000000409600                . = ALIGN (0x8)
                0x0000000000409600                . = SEGMENT_START ("ldata-segment", .)

.lrodata
 *(.lrodata .lrodata.* .gnu.linkonce.lr.*)

.ldata          0x000000000040b600        0x0
 *(.ldata .ldata.* .gnu.linkonce.l.*)
                0x000000000040b600                . = ALIGN ((. != 0x0)?0x8:0x1)
                0x000000000040b600                . = ALIGN (0x8)
                0x0000000000409600                _end = .
                [!provide]                        PROVIDE (end = .)
                0x000000000040b600                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x12
 *(.comment)
 .comment       0x0000000000000000       0x12 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs.c.o
                                         0x13 (size before relaxing)
 .comment       0x0000000000000012       0x13 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_ops.c.o
 .comment       0x0000000000000012       0x13 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_inode.c.o
 .comment       0x0000000000000012       0x13 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_rw.c.o
 .comment       0x0000000000000012       0x13 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_dentry.c.o
 .comment       0x0000000000000012       0x13 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_balloc.c.o
 .comment       0x0000000000000012       0x13 uspace/srv_fs_mfs.p/srv_fs_mfs_mfs_utils.c.o
 .comment       0x0000000000000012       0x13 uspace/lib/c/libstartfiles.a.p/generic_crt_crt1.c.o
 .comment       0x0000000000000012       0x13 uspace/lib/libblock.a.p/block_block.c.o
 .comment       0x0000000000000012       0x13 uspace/lib/libdevice.a.p/device_src_bd.c.o
 .comment       0x0000000000000012       0x13 uspace/lib/libfs.a.p/fs_libfs.c.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
 *(.debug_line_str)

.debug_loclists
 *(.debug_loclists)

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
 *(.debug_rnglists)

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(uspace/srv_fs_mfs elf64-x86-64)
