
As-needed library included to satisfy reference by file (symbol)

libc.so.0                     uspace/lib/libfs.so.0.0.p/fs_libfs.c.o (async_wait_for)

Discarded input sections

 .text          0x0000000000000000        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 .data          0x0000000000000000        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 .bss           0x0000000000000000        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
START GROUP
LOAD uspace/lib/libc.so.0.0
LOAD /home/zyc/.local/share/HelenOS/cross/lib/gcc/amd64-helenos/13.2.0/libgcc.a
END GROUP
                0x0000000000000120                . = (SEGMENT_START ("text-segment", 0x0) + SIZEOF_HEADERS)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash           0x0000000000000120       0xcc
 *(.hash)
 .hash          0x0000000000000120       0xcc uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.gnu.hash
 *(.gnu.hash)

.dynsym         0x00000000000001f0      0x300
 *(.dynsym)
 .dynsym        0x00000000000001f0      0x300 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.dynstr         0x00000000000004f0      0x247
 *(.dynstr)
 .dynstr        0x00000000000004f0      0x247 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.gnu.version    0x0000000000000738        0x0
 *(.gnu.version)
 .gnu.version   0x0000000000000738        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.gnu.version_d  0x0000000000000738        0x0
 *(.gnu.version_d)
 .gnu.version_d
                0x0000000000000738        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.gnu.version_r  0x0000000000000738        0x0
 *(.gnu.version_r)
 .gnu.version_r
                0x0000000000000738        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.rela.dyn       0x0000000000000738       0x60
 *(.rela.init)
 *(.rela.text .rela.text.* .rela.gnu.linkonce.t.*)
 *(.rela.fini)
 *(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*)
 *(.rela.data .rela.data.* .rela.gnu.linkonce.d.*)
 .rela.data.rel.local.instances_list
                0x0000000000000738       0x30 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 .rela.data.rel.local.instances_mutex
                0x0000000000000768       0x30 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *(.rela.tdata .rela.tdata.* .rela.gnu.linkonce.td.*)
 *(.rela.tbss .rela.tbss.* .rela.gnu.linkonce.tb.*)
 *(.rela.ctors)
 *(.rela.dtors)
 *(.rela.got)
 .rela.got      0x0000000000000798        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*)
 *(.rela.ldata .rela.ldata.* .rela.gnu.linkonce.l.*)
 *(.rela.lbss .rela.lbss.* .rela.gnu.linkonce.lb.*)
 *(.rela.lrodata .rela.lrodata.* .rela.gnu.linkonce.lr.*)
 *(.rela.ifunc)
 .rela.ifunc    0x0000000000000798        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.rela.plt       0x0000000000000798      0x270
 *(.rela.plt)
 .rela.plt      0x0000000000000798      0x270 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *(.rela.iplt)

.relr.dyn
 *(.relr.dyn)

.init
 *(SORT_NONE(.init))

.plt            0x0000000000000a10      0x1b0
 *(.plt)
 .plt           0x0000000000000a10      0x1b0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *(.iplt)

.plt.got        0x0000000000000bc0        0x0
 *(.plt.got)
 .plt.got       0x0000000000000bc0        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.plt.sec
 *(.plt.sec)

.text           0x0000000000000bc0     0x13e8
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text.vfs_connection
                0x0000000000000bc0     0x1020 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 .text.fs_register
                0x0000000000001be0      0x16f uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                0x0000000000001be0                fs_register
 *fill*         0x0000000000001d4f        0x1 
 .text.fs_node_initialize
                0x0000000000001d50        0xd uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                0x0000000000001d50                fs_node_initialize
 *fill*         0x0000000000001d5d        0x3 
 .text.fs_instance_create
                0x0000000000001d60      0x103 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                0x0000000000001d60                fs_instance_create
 *fill*         0x0000000000001e63        0xd 
 .text.fs_instance_get
                0x0000000000001e70       0x88 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                0x0000000000001e70                fs_instance_get
 *fill*         0x0000000000001ef8        0x8 
 .text.fs_instance_destroy
                0x0000000000001f00       0xa8 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                0x0000000000001f00                fs_instance_destroy
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x0000000000001fa8       0xc8
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.vfs_connection.str1.8
                0x0000000000001fa8       0x4e uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 .rodata.vfs_connection.str1.1
                0x0000000000001ff6       0x3c uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                                         0x48 (size before relaxing)
 *fill*         0x0000000000002032        0x2 
 .rodata.vfs_connection
                0x0000000000002034       0x3c uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.rodata1
 *(.rodata1)

.eh_frame_hdr   0x0000000000002070       0x44
 *(.eh_frame_hdr)
 .eh_frame_hdr  0x0000000000002070       0x44 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                0x0000000000002070                __GNU_EH_FRAME_HDR
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000000020b8      0x164
 *(.eh_frame)
 .eh_frame      0x00000000000020b8      0x140 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 .eh_frame      0x00000000000021f8       0x24 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                                         0x40 (size before relaxing)
 .eh_frame      0x000000000000221c        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *(.eh_frame.*)

.sframe         0x000000000000221c        0x0
 *(.sframe)
 .sframe        0x000000000000221c        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *(.sframe.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x000000000000321c                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.sframe
 *(.sframe)
 *(.sframe.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array
 *(.preinit_array)

.init_array
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)

.fini_array
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro    0x000000000000321c        0x0
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)
 .data.rel.ro   0x000000000000321c        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.dynamic        0x0000000000003220      0x150
 *(.dynamic)
 .dynamic       0x0000000000003220      0x150 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                0x0000000000003220                _DYNAMIC

.got            0x0000000000003370        0x0
 *(.got)
 .got           0x0000000000003370        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *(.igot)
                0x0000000000003370                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0x18)?0x18:0x0)

.got.plt        0x0000000000003370       0xe8
 *(.got.plt)
 .got.plt       0x0000000000003370       0xe8 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                0x0000000000003370                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)

.data           0x0000000000003460       0x40
 *(.data .data.* .gnu.linkonce.d.*)
 .data.rel.local.instances_list
                0x0000000000003460       0x10 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *fill*         0x0000000000003470       0x10 
 .data.rel.local.instances_mutex
                0x0000000000003480       0x20 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o

.data1
 *(.data1)
                [!provide]                        PROVIDE (_edata = .)
                [!provide]                        PROVIDE (edata = .)
                0x00000000000034a0                . = .
                [!provide]                        PROVIDE (__bss_start = .)

.bss            0x00000000000034a0       0x40
 *(.dynbss)
 .dynbss        0x00000000000034a0        0x0 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss.fs_name   0x00000000000034a0       0x15 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *fill*         0x00000000000034b5        0x3 
 .bss.libfs_ops
                0x00000000000034b8        0x8 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 .bss.vfs_out_ops
                0x00000000000034c0        0x8 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *fill*         0x00000000000034c8        0x8 
 .bss.reg       0x00000000000034d0       0x10 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
 *(COMMON)
                0x00000000000034e0                . = ALIGN ((. != 0x0)?0x8:0x1)

.lbss
 *(.dynlbss)
 *(.lbss .lbss.* .gnu.linkonce.lb.*)
 *(LARGE_COMMON)
                0x00000000000034e0                . = ALIGN (0x8)
                0x00000000000034e0                . = SEGMENT_START ("ldata-segment", .)

.lrodata
 *(.lrodata .lrodata.* .gnu.linkonce.lr.*)

.ldata          0x00000000000054e0        0x0
 *(.ldata .ldata.* .gnu.linkonce.l.*)
                0x00000000000054e0                . = ALIGN ((. != 0x0)?0x8:0x1)
                0x00000000000054e0                . = ALIGN (0x8)
                [!provide]                        PROVIDE (_end = .)
                [!provide]                        PROVIDE (end = .)
                0x00000000000054e0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x12
 *(.comment)
 .comment       0x0000000000000000       0x12 uspace/lib/libfs.so.0.0.p/fs_libfs.c.o
                                         0x13 (size before relaxing)

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
 *(.debug_line_str)

.debug_loclists
 *(.debug_loclists)

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
 *(.debug_rnglists)

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(uspace/lib/libfs.so.0.0 elf64-x86-64)
